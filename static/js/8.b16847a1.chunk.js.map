{"version":3,"sources":["components/SearchBar/SearchBar.jsx","pages/MoviesPage.js","utils/ApiServices.js","images/default.jpg","icons/sprite.svg","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.module.scss","components/MoviesGallery/MoviesGallery.module.scss","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.jsx"],"names":["SearchBar","history","useHistory","location","useLocation","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","push","search","InputGroup","className","FormControl","onChange","currentTarget","value","toLowerCase","name","type","autoComplete","autoFocus","Button","variant","id","MoviesPage","movies","setMovies","hasMorePage","setHasMorePage","query","URLSearchParams","get","getMoviesByQuery","api","currentPage","allPages","fetchMovieByQuery","then","total_pages","results","length","increasePage","setAllPages","prev","catch","message","console","log","useEffect","resetPage","dataLength","next","hasMore","loader","LoaderSpinner","MoviesGallery","MoviesData","API_KEY","BASE_URL","fetchData","url","a","axios","data","Error","this","page","fetchTrendingMovies","fetchMovieById","fetchMovieCast","fetchMovieReviews","module","exports","MoviesGalleryItem","poster","title","vote","release","styles","item","link","to","pathname","state","from","voteWrapper","voteText","icon","height","width","href","sprite","imgWrapper","src","defaultImage","alt","contentWrapper","slice","list","map","idx","poster_path","vote_average","release_date"],"mappings":"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","file":"static/js/8.b16847a1.chunk.js","sourcesContent":["import { useHistory, useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function SearchBar() {\n  const history = useHistory();\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const onInputChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === \"\") {\n      return alert(\"Please enter query\");\n    }\n\n    history.push({ ...location, search: `query=${searchQuery}` });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            onChange={onInputChange}\n            value={searchQuery}\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <Button type=\"submit\" variant=\"outline-secondary\" id=\"button-addon2\">\n            Search\n          </Button>\n        </InputGroup>\n      </form>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport LoaderSpinner from \"../components/LoaderSpinner/LoaderSpinner\";\nimport MoviesGallery from \"../components/MoviesGallery/MoviesGallery\";\nimport SearchBar from \"../components/SearchBar/SearchBar\";\n\nimport api from \"../utils/ApiServices\";\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [hasMorePage, setHasMorePage] = useState(true);\n\n  const query = new URLSearchParams(location.search).get(\"query\");\n\n  useEffect(() => {\n    if (query !== null) {\n      setMovies([]);\n      api.resetPage();\n      api.setAllPages(1);\n      setHasMorePage(true);\n      getMoviesByQuery();\n    }\n    return false;\n  }, [query]);\n\n  function getMoviesByQuery() {\n    if (api.currentPage > api.allPages) {\n      alert(`There are no pages left`);\n      setHasMorePage(false);\n      return;\n    }\n\n    api\n      .fetchMovieByQuery(query)\n      .then(({ total_pages, results }) => {\n        if (!results.length) {\n          alert(`On your query \"${query}\" nothing matches found. `);\n          return;\n        }\n\n        if (total_pages === 1) {\n          setHasMorePage(false);\n        }\n\n        api.increasePage();\n        api.setAllPages(total_pages);\n        setMovies(prev => [...prev, ...results]);\n      })\n      .catch(({ message }) => console.log(message));\n  }\n\n  return (\n    <>\n      <SearchBar />\n      {!!movies.length && (\n        <InfiniteScroll\n          className=\"InfiniteScroll\"\n          dataLength={movies.length}\n          next={getMoviesByQuery}\n          hasMore={hasMorePage}\n          loader={<LoaderSpinner />}\n        >\n          <MoviesGallery MoviesData={movies} />\n        </InfiniteScroll>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '1d7fb67928c0be1237a2da4e51e9ed0f';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchData(url) {\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nconst api = {\n  currentPage: 1,\n  allPages: 1,\n\n  increasePage() {\n    this.currentPage += 1;\n  },\n\n  resetPage() {\n    this.currentPage = 1;\n  },\n\n  setAllPages(page) {\n    this.allPages = page;\n  },\n\n  fetchMovieByQuery(query) {\n    return fetchData(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${this.currentPage}`,\n    );\n  },\n\n  fetchTrendingMovies() {\n    return fetchData(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${this.currentPage}`,\n    );\n  },\n\n  fetchMovieById(id) {\n    return fetchData(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  },\n\n  fetchMovieCast(id) {\n    return fetchData(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  },\n\n  fetchMovieReviews(id) {\n    return fetchData(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  },\n};\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/default.94283dad.jpg\";","export default __webpack_public_path__ + \"static/media/sprite.3673916f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MoviesGalleryItem_item__3Ws0x\",\"link\":\"MoviesGalleryItem_link__37SJJ\",\"voteWrapper\":\"MoviesGalleryItem_voteWrapper__1Yrz5\",\"voteText\":\"MoviesGalleryItem_voteText__wxQ9e\",\"icon\":\"MoviesGalleryItem_icon__3ThGi\",\"imgWrapper\":\"MoviesGalleryItem_imgWrapper__Aq7O_\",\"contentWrapper\":\"MoviesGalleryItem_contentWrapper__2KeoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MoviesGallery_list__1A_3I\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport sprite from '../../../icons/sprite.svg';\nimport defaultImage from '../../../images/default.jpg';\n\nimport styles from './MoviesGalleryItem.module.scss';\n\nexport default function MoviesGalleryItem({\n  id,\n  poster,\n  title,\n  vote,\n  release,\n}) {\n  const location = useLocation();\n  return (\n    <li className={styles.item}>\n      <Link\n        className={styles.link}\n        to={{ pathname: `/movies/${id}`, state: { from: location } }}\n      >\n        <div className={styles.voteWrapper}>\n          <p className={styles.voteText}>{vote}</p>\n          <svg className={styles.icon} height=\"16\" width=\"16\">\n            <use href={sprite + '#star'} />\n          </svg>\n        </div>\n        <div className={styles.imgWrapper}>\n          <img\n            src={\n              poster ? `https://image.tmdb.org/t/p/w300${poster}` : defaultImage\n            }\n            alt={title}\n          />\n        </div>\n        <div className={styles.contentWrapper}>\n          <h3>{`${title} (${release ? release.slice(0, 4) : 'Unknown'})`}</h3>\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nMoviesGalleryItem.propTypes = {\n  id: PropTypes.number,\n  poster: PropTypes.string,\n  title: PropTypes.string,\n  vote: PropTypes.number,\n  release: PropTypes.string,\n};\n","import React from 'react';\nimport MoviesGalleryItem from './MoviesGalleryItem/MoviesGalleryItem';\n\nimport styles from './MoviesGallery.module.scss';\n\nexport default function MoviesGallery({ MoviesData }) {\n  return (\n    <ul className={styles.list}>\n      {MoviesData.map(\n        ({ id, poster_path, title, vote_average, release_date }, idx) => (\n          <MoviesGalleryItem\n            key={idx}\n            id={id}\n            poster={poster_path}\n            title={title}\n            vote={vote_average}\n            release={release_date}\n          />\n        ),\n      )}\n    </ul>\n  );\n}\n"],"sourceRoot":""}